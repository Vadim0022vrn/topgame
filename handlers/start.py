import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime
from config.config import API_TOKEN
from utils.helpers import generate_referral_code
from utils.database import execute_db_query  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from handlers.profile import handle_profile
from handlers.referral import handle_myref
from handlers.earnings import handle_education_list
from handlers.help import handle_help
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from config.level import add_experience  # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ–ø—ã—Ç–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()


class StoryStates(StatesGroup):
    STEP_1 = State()
    STEP_2 = State()
    STEP_3 = State()
    STEP_4 = State()
    STEP_5 = State()
    STEP_6 = State()
    STEP_7 = State()
    STEP_FINAL = State()
    # –î–æ–±–∞–≤—å —Å—Ç–æ–ª—å–∫–æ —à–∞–≥–æ–≤, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ

STORY_MESSAGES = [
    "üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\nüî• <b>–¢–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å‚Ä¶</b>\n\n<b>üé© –¢—ã, {username} ‚Äî —Å—ã–Ω –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä–∞.</b>\n–¢–≤–æ—è –∂–∏–∑–Ω—å ‚Äî —ç—Ç–æ —Ä–æ—Å–∫–æ—à–Ω—ã–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏ üéâ, –¥–æ—Ä–æ–≥–∏–µ –º–∞—à–∏–Ω—ã üöó –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–∞ —á–∞—Å—Ç–Ω—ã—Ö —Å–∞–º–æ–ª—ë—Ç–∞—Ö ‚úàÔ∏è. \n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫, –≥–¥–µ –≤–µ—Å—å –º–∏—Ä –∫—Ä—É—Ç–∏—Ç—Å—è –≤–æ–∫—Ä—É–≥ —Ç–µ–±—è. \n\n"
    "–ù–æ –Ω–∞ —Ç–≤–æ–π 25-–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤—Å—ë –º–µ–Ω—è–µ—Ç—Å—è.\n\n<b><i>‚ùù–°—ã–Ω, —è –¥–∞–ª —Ç–µ–±–µ –≤—Å—ë ‚Äî –Ω–æ —Ç–µ–ø–µ—Ä—å –∑–∞–±–∏—Ä–∞—é. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å ‚Äî –¥–æ–±—É–¥—å —ç—Ç–æ —Å–∞–º. –¢–æ–ª—å–∫–æ –ø—Ä–æ–π–¥—è –ø—É—Ç—å —Å –Ω—É–ª—è, —Ç—ã –ø–æ–π–º—ë—à—å –Ω–∞—Å—Ç–æ—è—â—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞.‚ùû</i></b>\n\n"
    "–ü—Ä–æ—Å–Ω—É–≤—à–∏—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ —É—Ç—Ä–æ, —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—à—å —Å–µ–±—è –≤ —Å—Ç–∞—Ä–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ –Ω–∞ –æ–∫—Ä–∞–∏–Ω–µ –≥–æ—Ä–æ–¥–∞ —Å <b>1000$</b> üíµ –≤ –∫–∞—Ä–º–∞–Ω–µ.\n\n–ë–æ–ª—å—à–µ –Ω–µ—Ç –±–æ–≥–∞—Ç—Å—Ç–≤–∞, —Ç–æ–ª—å–∫–æ —à–∞–Ω—Å –¥–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å...",

    "üíº <b>–ü–µ—Ä–≤—ã–π —à–∞–≥ –∫ –Ω–æ–≤–æ–π –∂–∏–∑–Ω–∏</b>\n\nüí° <b>–¢–≤–æ—è –ø–µ—Ä–≤–∞—è —Ä–∞–±–æ—Ç–∞ ‚Äî —É–±–æ—Ä—â–∏–∫ –≤ –∫–∞—Ñ–µ.</b>\n\n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –±–æ—Ä—å–±–∞: \n\n‚úÖ –ì—Ä—è–∑–Ω—ã–µ –ø–æ–ª—ã üßº –∏ –∏–∑–Ω—É—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–µ–Ω—ã ‚è≥.\n\n‚úÖ –ì—Ä—É–±—ã–µ –∫–ª–∏–µ–Ω—Ç—ã üò† –∏ —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–π –Ω–∞—á–∞–ª—å–Ω–∏–∫ üòê.\n\n–ù–æ —Å—Ä–µ–¥–∏ —à—É–º–∞ –ø–æ—Å—É–¥—ã –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –±–µ–≥–æ—Ç–Ω–∏ —Ç—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –∑–∞–º–µ—á–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ ‚Äî —É –∫–∞–∂–¥–æ–≥–æ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–Ω—è—Ç—å—Å—è –≤—ã—à–µ.\n\n"
    "üîπ –ü–µ—Ä–≤–∞—è —á–µ—Å—Ç–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞.\nüîπ –ú—ã—Å–ª–∏ –æ –±—É–¥—É—â–µ–º –∏ –ø–ª–∞–Ω—ã –Ω–∞ —É—Å–ø–µ—Ö.\nüîπ –ü–æ–Ω–∏–º–∞–Ω–∏–µ: –∑–¥–µ—Å—å –Ω–µ –º–µ—Å—Ç–æ –¥–ª—è —Ç–µ–±—è.\n\n<b>–¢—ã —Ä–µ—à–∞–µ—à—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!</b>",


    "üöÄ <b>–ù–∞—á–∞–ª–æ –ø—É—Ç–∏: —Ä–∞–±–æ—Ç–∞, —Ä–∏—Å–∫–∏, –ø–µ—Ä–≤—ã–µ –¥–µ–Ω—å–≥–∏</b>\n\nüöó <b>–°–æ–±—Ä–∞–≤ –Ω–µ–º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n\n"
    "–ü–µ—Ä–µ—Ö–æ–¥–∏—à—å —Ä–∞–±–æ—Ç–∞—Ç—å <b>–æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–º</b> üçΩÔ∏è –∏ <b>–ø–æ–≤–∞—Ä–æ–º</b> üë®‚Äçüç≥.\n\n–ü—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—à—å <b>–ø–µ—Ä–≤—É—é –º–∞—à–∏–Ω—É</b> üöó ‚Äî —Ç–≤–æ–π —Å–∏–º–≤–æ–ª —Å–≤–æ–±–æ–¥—ã.\n\n–£—á–∞—Å—Ç–≤—É–µ—à—å –≤ —É–ª–∏—á–Ω—ã—Ö –≥–æ–Ω–∫–∞—Ö üèÅ, —Ä–∏—Å–∫—É—è –≤—Å–µ–º —Ä–∞–¥–∏ –∫—Ä—É–ø–Ω–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞ üí∞.\n\n"
    "–í–ø–µ—Ä–µ–¥–∏ ‚Äî –ø–µ—Ä–≤—ã–µ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏ üí° –∏ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏, –Ω–æ —Ö–≤–∞—Ç–∏—Ç –ª–∏ —Å–º–µ–ª–æ—Å—Ç–∏ –≤–æ–ø–ª–æ—Ç–∏—Ç—å –∏—Ö –≤ –∂–∏–∑–Ω—å?",

    "üè¢ <b>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å –∏ –ø–µ—Ä–≤—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</b>\n\n"
    "üè™ <b>–¢—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –±–∏–∑–Ω–µ—Å ‚Äî –º–∞–ª–µ–Ω—å–∫–æ–µ –∫–∞—Ñ–µ –∏–ª–∏ –ø–µ–∫–∞—Ä–Ω—é.</b>\n–¢–µ–ø–µ—Ä—å —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å –∑–∞ –≤—Å—ë:\n\n"
    "–ë–æ—Ä—å–±–∞ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏ ‚öîÔ∏è.\n\n–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ üìà.\n\n–ü–µ—Ä–≤—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ <b>–º–∞–π–Ω–∏–Ω–≥-—Ñ–µ—Ä–º—É</b> ‚õèÔ∏è –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ üíπ.\n\n"
    "–û–¥–Ω–∞–∫–æ —É—Å–ø–µ—Ö –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–µ —Ç–æ–ª—å–∫–æ —á–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–π. –¢–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –±—ã—Å—Ç—Ä—ã–µ –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏. \n<b>–†–∏—Å–∫–Ω—ë—à—å –∏–ª–∏ –ø–æ–π–¥—ë—à—å —á–µ—Å—Ç–Ω—ã–º –ø—É—Ç—ë–º?</b>",

    "‚öî <b>–ö–ª–∞–Ω—ã, –±–∏—Ç–≤—ã –∑–∞ –≤–ª–∏—è–Ω–∏–µ –∏ –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã</b>\n\n"
    "–¢—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è <b>–∑–∞–º–µ—Ç–Ω–æ–π —Ñ–∏–≥—É—Ä–æ–π</b> –≤ –≥–æ—Ä–æ–¥–µ. –¢–µ–ø–µ—Ä—å –∏–≥—Ä–∞ –∏–¥—ë—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ –¥–µ–Ω—å–≥–∏, –Ω–æ –∏ –∑–∞ –≤–ª–∞—Å—Ç—å.\n\n"
    "üî• <b>–¢–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π:</b>\n\n"
    "üõ° <b>–ó–∞—â–∏—Ç–∞ –∏ —Å–æ—é–∑–Ω–∏–∫–∏ –∏–ª–∏</b> ‚öî <b>–±–æ—Ä—å–±–∞ –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é?</b>\n\n"
    "üëä <b>–ü—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞–º –∏–ª–∏</b> üíº <b>–¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏ —Å –Ω–∏–º–∏?</b>\n\n"
    "üöÄ <b>–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞</b> –≤ –¥—Ä—É–≥–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –¥–∞–∂–µ —Å—Ç—Ä–∞–Ω—ã.\n\n–° –∫–∞–∂–¥—ã–º —à–∞–≥–æ–º —Ç–≤–æ—è –≤–ª–∞—Å—Ç—å —Ä–∞—Å—Ç—ë—Ç, –∞ —Å –Ω–µ–π ‚Äì <b>–Ω–æ–≤—ã–µ –≤—Ä–∞–≥–∏</b>.",

    "üåç <b>–û—Ç –±–∏–∑–Ω–µ—Å–∞ –∫ –º–∏—Ä–æ–≤–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–µ</b>\n\n"
    "–¢—ã –ø—Ä–æ—à—ë–ª –ø—É—Ç—å –æ—Ç —É–±–æ—Ä—â–∏–∫–∞ –¥–æ <b>–≤–ª–∏—è—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞–≥–Ω–∞—Ç–∞</b>. –¢–µ–ø–µ—Ä—å —Ç–≤–æ—è —Ü–µ–ª—å ‚Äî <b>–º–∏—Ä–æ–≤–∞—è –∏–º–ø–µ—Ä–∏—è</b>!\n\n"
    "üèù <b>–ü–æ–∫—É–ø–∫–∞ –æ—Å—Ç—Ä–æ–≤–æ–≤</b> –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —ç–ª–∏—Ç–Ω—ã—Ö –∫—É—Ä–æ—Ä—Ç–æ–≤.\n\n"
    "üöÄ <b>–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</b> –∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –º–∞–π–Ω–∏–Ω–≥.\n\n"
    "üêâ <b>–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø–∏—Ç–æ–º—Ü—ã</b>, —Å–ø–æ—Å–æ–±–Ω—ã–µ –º–µ–Ω—è—Ç—å —Ö–æ–¥ –±–∏—Ç–≤.\n\n"
    "–ù–æ –≤—Ä–∞–≥–∏ —Ç–æ–∂–µ –Ω–µ –¥—Ä–µ–º–ª—é—Ç. –ö—Ç–æ-—Ç–æ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –≥–æ—Ç–æ–≤ —Å–¥–µ–ª–∞—Ç—å –≤—Å—ë, —á—Ç–æ–±—ã <b>—É–Ω–∏—á—Ç–æ–∂–∏—Ç—å</b> —Ç–≤–æ—é –∏–º–ø–µ—Ä–∏—é‚Ä¶",

    "üî• <b>–ß—Ç–æ –∂–¥—ë—Ç —Ç–µ–±—è –≤ —ç—Ç–æ–π –∏–≥—Ä–µ?</b>\n"
    "üåü <b>–¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π ‚Äî –≤–µ—Å—å –º–∏—Ä:</b>\n\n"
    "<b>–£—Ä–æ–≤–Ω–∏ –∏ –æ–ø—ã—Ç:</b> üìä –ß–µ–º –±–æ–ª—å—à–µ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å, —É—á–∏—à—å—Å—è –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—à—å –±–∏–∑–Ω–µ—Å, —Ç–µ–º –≤—ã—à–µ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å. –ù–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø –∫ –±–æ–ª–µ–µ –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º, –±–∏–∑–Ω–µ—Å–∞–º –∏ –≥–æ—Ä–æ–¥–∞–º.\n\n"
    "<b>–ê–∫—Ç–∏–≤—ã:</b> üè† –ü–æ–∫—É–ø–∞–π –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ üöó, –¥–æ–º–∞ üè°, —è—Ö—Ç—ã üõ•Ô∏è –∏ –¥–∞–∂–µ –æ—Å—Ç—Ä–æ–≤–∞ üèùÔ∏è. –ö–∞–∂–¥—ã–π –∞–∫—Ç–∏–≤ ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å, –Ω–æ –∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n\n"
    "<b>–ö–ª–∞–Ω—ã –∏ –≤–æ–π–Ω—ã:</b> ‚öîÔ∏è –û–±—ä–µ–¥–∏–Ω—è–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏–ª–∏ —Å–æ–∑–¥–∞–≤–∞–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞–Ω, —á—Ç–æ–±—ã –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏.\n\n"
    "<b>–ü–∏—Ç–æ–º—Ü—ã:</b> üê∂ –ü—ë—Å –¥–ª—è –æ—Ö—Ä–∞–Ω—ã, üê± –∫–æ—Ç, –ø—Ä–∏–Ω–æ—Å—è—â–∏–π —É–¥–∞—á—É, –∏–ª–∏ ü¶Ö —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ –ø–∏—Ç–æ–º—Ü—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ ‚Äî –æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç —Ç–≤–æ–∏–º–∏ –≤–µ—Ä–Ω—ã–º–∏ —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏.\n\n"
    "<b>–ú–∞–π–Ω–∏–Ω–≥ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</b> ‚õèÔ∏è –°—Ç—Ä–æ–π –º–∞–π–Ω–∏–Ω–≥-—Ñ–µ—Ä–º—ã, –≤–∫–ª–∞–¥—ã–≤–∞–π –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫ üè¶ –∏–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã üåç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥.\n\n"
    "üí¨ <b>–¢—ã –≥–æ—Ç–æ–≤ –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω –∑–∞–Ω–æ–≤–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∏–º–ø–µ—Ä–∏—é? –ù–∞—á–Ω–∏ –ø—É—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b> ‚úÖ",

    # –î–æ–±–∞–≤—å —Å—Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ
]


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def register_user(user_id, username, referral_code, referrer_id, registration_date):
    try:
        query = 'SELECT user_id FROM users WHERE user_id = %s'
        existing_user = await execute_db_query(query, (user_id,))
        
        if existing_user:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
            return "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."

        # –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if referrer_id:
            query = '''INSERT INTO users 
                       (user_id, username, referral_code, referrer_id, rank, last_daily, daily_streak, registration_date)
                       VALUES (%s, %s, %s, %s, %s, %s, %s, %s)'''
            await execute_db_query(query, (user_id, username, referral_code, referrer_id, 1, None, 0, registration_date))
            
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
            update_referrer_query = 'UPDATE users SET reffer = reffer + 1 WHERE user_id = %s'
            await execute_db_query(update_referrer_query, (referrer_id,))

            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
            get_reffer_count_query = 'SELECT reffer FROM users WHERE user_id = %s'
            reffer_count_result = await execute_db_query(get_reffer_count_query, (referrer_id,))
            reffer_count = reffer_count_result[0][0] if reffer_count_result else 0

            # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            base_bonus_money = 100  # –ë–∞–∑–æ–≤—ã–π –±–æ–Ω—É—Å –≤ –¥–µ–Ω—å–≥–∞—Ö
            base_bonus_experience = 50  # –ë–∞–∑–æ–≤—ã–π –±–æ–Ω—É—Å –≤ –æ–ø—ã—Ç–µ
            multiplier = 1.5  # –ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ 3-–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞

            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å
            bonus_multiplier = multiplier ** (reffer_count // 3)

            # –ù–∞—á–∏—Å–ª—è–µ–º –¥–µ–Ω—å–≥–∏
            bonus_money = int(base_bonus_money * bonus_multiplier)
            update_balance_query = 'UPDATE users SET balance = balance + %s WHERE user_id = %s'
            await execute_db_query(update_balance_query, (bonus_money, referrer_id))

            # –ù–∞—á–∏—Å–ª—è–µ–º –æ–ø—ã—Ç
            bonus_experience = int(base_bonus_experience * bonus_multiplier)
            await add_experience(referrer_id, bonus_experience)

            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞—á–∏—Å–ª–µ–Ω–æ {bonus_money} –¥–µ–Ω–µ–≥ –∏ {bonus_experience} –æ–ø—ã—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {referrer_id}.")
        else:
            query = '''INSERT INTO users 
                       (user_id, username, referral_code, rank, last_daily, daily_streak, registration_date)
                       VALUES (%s, %s, %s, %s, %s, %s, %s)'''
            await execute_db_query(query, (user_id, username, referral_code, 1, None, 0, registration_date))

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ.")
        return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {str(e)}")
        return "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def handle_start(message: types.Message, state: FSMContext):
    try:
        parts = message.text.split()
        args = " ".join(parts[1:]) if len(parts) > 1 else ""

        user_id = message.from_user.id
        username = message.from_user.username or ""
        registration_date = datetime.now().strftime("%Y-%m-%d")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        query = 'SELECT user_id FROM users WHERE user_id = %s'
        existing_user = await execute_db_query(query, (user_id,))

        if existing_user:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            welcome_text = (
                f"üéâ <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}!</b>\n\n"
                "üîÑ –ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ –±–æ–≥–∞—Ç—Å—Ç–≤—É –∏ —É—Å–ø–µ—Ö—É? üí™\n"
                "üèÜ –ú–∏—Ä –∂–¥—ë—Ç —Ç–≤–æ–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ‚Äî –ø–æ–∫–∞–∂–∏ –≤—Å–µ–º, –∫—Ç–æ –∑–¥–µ—Å—å –±—É–¥—É—â–∏–π –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä! üöÄ"
            )
            await message.answer(welcome_text, reply_markup=get_main_menu_keyboard())
        else:
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            referral_code = generate_referral_code()

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
            referrer_id = None
            if args:
                query = 'SELECT user_id FROM users WHERE referral_code = %s'
                result = await execute_db_query(query, (args,))
                if result:
                    referrer_id = result[0][0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (user_id)
                else:
                    logger.info(f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ {args} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await register_user(user_id, username, referral_code, referrer_id, registration_date)

            # –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—à–∞–≥–æ–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
            await state.set_state(StoryStates.STEP_1)
            await send_story_step(message, state, username)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: {str(e)}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.")


async def send_story_step(message: types.Message, state: FSMContext, username: str):
    try:
        current_state = await state.get_state()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        if current_state == StoryStates.STEP_1:
            step = 0
        elif current_state == StoryStates.STEP_2:
            step = 1
        elif current_state == StoryStates.STEP_3:
            step = 2
        elif current_state == StoryStates.STEP_4:
            step = 3
        elif current_state == StoryStates.STEP_5:
            step = 4
        elif current_state == StoryStates.STEP_6:
            step = 5
        elif current_state == StoryStates.STEP_7:
            step = 6
        elif current_state == StoryStates.STEP_FINAL:
            # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–¢–µ–ø–µ—Ä—å —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!"
            await state.clear()
            await show_main_menu(message)
            return
        else:
            # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            await state.clear()
            await show_main_menu(message)
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º —à–∞–≥–æ–º –∏—Å—Ç–æ—Ä–∏–∏
        await message.answer(STORY_MESSAGES[step].format(username=username), reply_markup=get_next_button())

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        if step + 1 < len(STORY_MESSAGES):
            next_state = getattr(StoryStates, f"STEP_{step + 2}")
        else:
            # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —à–∞–≥—É
            next_state = StoryStates.STEP_FINAL

        await state.set_state(next_state)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_story_step: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
def get_next_button():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–î–∞–ª–µ–µ", callback_data="next_story_step"))
    return builder.as_markup()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üìö –û–±—É—á–µ–Ω–∏—è", callback_data="start_education_list"),
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="start_–ø—Ä–æ—Ñ–∏–ª—å"),
        InlineKeyboardButton(text="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="start_–º–æ–π—Ä–µ—Ñ"),
        InlineKeyboardButton(text="‚Äº –ü–æ–º–æ—â—å", callback_data="start_help")
    )
    builder.adjust(2)
    return builder.as_markup()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def show_main_menu(message: types.Message):
    await message.answer("<b>–û—Ç–ª–∏—á–Ω–æ!</b>\n<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª(–∞) –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ</b>\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –≥–æ—Ç–æ–≤(–∞) –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É! \n<b>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:</b>", reply_markup=get_main_menu_keyboard())



@dp.callback_query(lambda c: True)
async def handle_callback_query(callback_query: types.CallbackQuery, state: FSMContext):
    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        await callback_query.answer()

        # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ
        callback_data = callback_query.data
        username = callback_query.from_user.username or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (ID: {callback_query.from_user.id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É: {callback_data}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ message —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not callback_query.message:
            logger.error("callback_query.message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
        if callback_data == "next_story_step":
            username = callback_query.from_user.username or ""
            await send_story_step(callback_query.message, state, username)
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        callback_handlers = {
            "start_education_list": handle_education_list,
            "start_–ø—Ä–æ—Ñ–∏–ª—å": handle_profile,
            "start_–º–æ–π—Ä–µ—Ñ": handle_myref,
            "start_help": handle_help
        }

        if callback_data in callback_handlers:
            # ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é handle_help –æ—Ç–¥–µ–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –æ–∂–∏–¥–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç
            if callback_data == "start_help":
                await handle_help(callback_query.message)
            else:
                await callback_handlers[callback_data](callback_query.message, callback_query.from_user.id)
        else:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: {callback_data}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ callback_query: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
